#include <bits/stdc++.h>
using namespace std;

class CustomStack {
private:
    stack<int> mainStack;  
    stack<int> minStack;   
    stack<int> maxStack;  

public:
    void push(int x) {
        mainStack.push(x);

        if (minStack.empty() || x <= minStack.top()) {
            minStack.push(x);
        } else {
            minStack.push(minStack.top());
        }

        // Update maxStack
        if (maxStack.empty() || x >= maxStack.top()) {
            maxStack.push(x);
        } else {
            maxStack.push(maxStack.top());
        }
    }

    void pop() {
        if (!mainStack.empty()) {
            mainStack.pop();
            minStack.pop();
            maxStack.pop();
        }
    }

    
    int top() {
        if (!mainStack.empty()) {
            return mainStack.top();
        }
        return -1; 
    }

    int getMin() {
        if (!minStack.empty()) {
            return minStack.top();
        }
        return -1;
    }

    int getMax() {
        if (!maxStack.empty()) {
            return maxStack.top();
        }
        return -1;
    }
};


int main() {
    CustomStack s;
    s.push(5);
    s.push(2);
    s.push(10);
    s.push(1);

    cout << "Top element: " << s.top() << endl;
    cout << "Minimum element: " << s.getMin() << endl;
    cout << "Maximum element: " << s.getMax() << endl;

    s.pop();
    cout << "After popping, Min: " << s.getMin() << ", Max: " << s.getMax() << endl;

    return 0;
}
